{
	"LCA Temple": {
		"scope": "cpp",
		"prefix": "LCA",
		"body": [
			"struct TREE {",
			"\tint n, flag = 0;",
			"",
			"\tstd::vector<std::vector<int>> e, fa;",
			"\t",
			"\tstd::vector<int> dep;",
			"\t",
			"\tTREE(int n) : n(n) {",
			"\t\te.resize(n);",
			"\t\tfa.resize(n);",
			"\t\tdep.resize(n);",
			"\t\tfor (int i = 0; i < n; i++) {",
			"\t\t\tfa[i].resize(21);",
			"\t\t}",
			"\t}",
			"",
			"\tvoid add(int u, int v) {",
			"\t\te[u].push_back(v);",
			"\t\te[v].push_back(u);",
			"\t}",
			"",
			"\tvoid dfs(int u, int last) {",
			"\t\tdep[u] = dep[last] + 1;",
			"\t\tfor (int i = 1; i <= 20; i++) {",
			"\t\t\tif (!fa[u][i - 1]) break;",
			"\t\t\tfa[u][i] = fa[fa[u][i - 1]][i - 1];",
			"\t\t}",
			"\t\tfor (auto v : e[u]) {",
			"\t\t\tif (v == fa[u][0]) continue;",
			"\t\t\tfa[v][0] = u;",
			"\t\t\tdfs(v, u);",
			"\t\t}",
			"\t}",
			"",
			"\tint lca(int x, int y) {",
			"\t\tfor (int i = dep[x] - dep[y], j = 0; i > 0; i >>= 1, j++) {",
			"\t\t\tif (i & 1) x = fa[x][j];",
			"\t\t}",
			"\t\tfor (int i = dep[y] - dep[x], j = 0; i > 0; i >>= 1, j++) {",
			"\t\t\tif (i & 1) y = fa[y][j];",
			"\t\t}",
			"\t\tif (x != y) {",
			"\t\t\tfor (int i = 20; i >= 0; i--) {",
			"\t\t\t\tif (fa[x][i] == fa[y][i]) continue;",
			"\t\t\t\tx = fa[x][i];",
			"\t\t\t\ty = fa[y][i];",
			"\t\t\t}",
			"\t\t\tx = fa[x][0];",
			"\t\t}",
			"\t\treturn x;",
			"\t};",
			"};"
		],
		"description": "LCA Temple"
	}
}